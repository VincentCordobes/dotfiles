# shellcheck disable=SC1000-SC9999
###########################################
# General options
###########################################

autoload -U promptinit; promptinit
prompt pure
PURE_PROMPT_SYMBOL="→"
PURE_PROMPT_VICMD_SYMBOL="←"

# completion
setopt always_to_end
setopt complete_in_word

zmodload zsh/complist
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'

# history
HISTFILE=~/.histfile
HISTSIZE=5000000
SAVEHIST=1000000

setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_verify
setopt share_history

# directories
setopt autocd
setopt auto_pushd
setopt pushd_ignore_dups
setopt pushd_minus

setopt noflowcontrol
setopt interactivecomments
setopt login
setopt longlistjobs
setopt promptsubst

zstyle :compinstall filename '/home/vincent/.zshrc'

autoload -Uz compinit
compinit


###########################################
# User configuration                      #
###########################################

export GPG_TTY=$(tty)
export EDITOR=nvim
export PAGER=less
export LESS=--RAW-CONTROL-CHARS
export BROWSER=chromium
export ESCDELAY=0

# VI keys
export KEYTIMEOUT=1
bindkey -v
bindkey "^?" backward-delete-char
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

# edit command in editor
autoload -z edit-command-line
zle -N edit-command-line
bindkey "^F" edit-command-line

# Aliases
alias open='xdg-open'
alias vim='nvim'
alias e='nvim'
alias vimdiff='nvim -d'

alias ls='ls --color=auto'
alias lsa='ls -lAh'
alias ll='ls -lh'

alias gs='git status'
alias gd='git diff'
alias gupdate='git add . && git commit -m "Update"'
alias gco='git checkout'
alias glog='git log --oneline --decorate --graph'
alias gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m "--wip-- [skip ci]"'
alias gunwip='git log -n 1 | grep -q -c "\--wip--" && git reset HEAD~1'

alias git-remove-untracked='git fetch --prune && git branch -r | awk "{print \$1}" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk "{print \$1}" | xargs git branch -D'

alias stocks="watch -n 1 -t -c ~/scripts/ticker.sh INTC DIS GOOGL DDOG"
alias w="pkill -SIGRTMIN+8 waybar && watson"
# alias wi="wiki"
# alias wj="wjournal"

goal() {
  vim `ls -dA ~/Dropbox/wiki/goal_* | tail -1`
}

mutt() {
  neomutt $@
  mbsync -a
}

# fzf
if [ -e /usr/share/fzf ]; then
  source /usr/share/fzf/key-bindings.zsh
  source /usr/share/fzf/completion.zsh
fi

export FZF_DEFAULT_COMMAND='rg --files --hidden --glob \!.git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"


BLK="0B" CHR="0B" DIR="04" EXE="06" REG="00" HARDLINK="06" SYMLINK="06" MISSING="00" ORPHAN="09" FIFO="06" SOCK="0B" OTHER="06"
export NNN_FCOLORS="$BLK$CHR$DIR$EXE$REG$HARDLINK$SYMLINK$MISSING$ORPHAN$FIFO$SOCK$OTHER"

[[ ! -r /home/vincent/.opam/opam-init/init.zsh ]] || source /home/vincent/.opam/opam-init/init.zsh  > /dev/null 2> /dev/null

# fshow - git commit browser
fshow() {
  git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
  fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
      --bind "ctrl-m:execute:
                (grep -o '[a-f0-9]\{7\}' | head -1 |
                xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                {}
FZF-EOF"
}

# pyenv
loadPyenv() {
  export PATH="/home/vincent/.pyenv/bin:$PATH"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
}


ptag() {
  git log --oneline | grep "\[.*\]" | awk '{count[$2]++} END {for (tag in count) print tag, count[tag]}'  | fzf
}

draft() {
  dir=/home/vincent/Dropbox/wiki/drafts
  pushd $dir > /dev/null

  today=`date +%Y-%m-%d`
  lang="en"
  name=""

  case $1 in
    "") 
      name=`date +%H:%M`
      ;;
    en | fr)
      lang="$1"
      name="$2"
      ;;
    *) 
      name="$1" 
      ;;
  esac

  name=`printf "%s_" $today $name | sed 's/_$//'`  
  vim "$name.md" -c "set spelllang=${lang:-en_us}"

  popd > /dev/null
}

pad() {
  tmpfile=`mktemp /tmp/scratchpad.XXXXXX`
  dir=`dirname $tmpfile`
  pushd $dir
  vim $tmpfile -c "set ft=markdown"
  popd
}

todo() {
  (cd /home/vincent/Dropbox/wiki; vim todo.md)
}

cooking() {
  (cd /home/vincent/Dropbox/wiki; vim cooking.md)
}

bmarks() {
  (cd /home/vincent/Dropbox/wiki; vim ./bookmarks.md)
}

	
fwiki() {
  (cd /home/vincent/Dropbox/jobs/foncia/wiki; vim index.md)
}

tmp() {
  (cd /home/vincent/tmp; vim tmp.md; clear)
}

incworkout() {
  WORKOUT_FILE=~/Dropbox/wiki/workout.gpi
  now=$(date +%Y-%m-%d)
  last_line=$(tail -n 1 $WORKOUT_FILE)
  echo "last: $last_line"

  if [ -n "$1" ]; then
    line="$now $1"
  else
    line="$now"
  fi;

  echo "now: $line"

  if [ "$line" = "$last_line" ]; then
    echo "Already marked => ignore"
  else
    echo "$line" >> $WORKOUT_FILE
    dijo -c "track-up running"
  fi
}

fe() (
  IFS=$'\n' files=($(fzf --height ${FZF_TMUX_HEIGHT:-10%} --query="$1" --multi --exit-0))
  [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
)


sk() {
  (cd ~/Dropbox/wiki && fe "$@")
}


ledgerdit() {
  vim "+ normal Gk" ~/Dropbox/data/ledger.dat
}

tophistory() {
  history | awk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] " " CMD[a]/count*100 "% " a;}' | grep -v "./" | column -c3 -s " " -t | sort -nr | nl |  head -n"${1:-10}"
}

jsontocsv() {
  inputfile=$1
  filename=$(basename "$inputfile")
  filename="${filename%.*}"
  outputfile=/tmp/$filename.csv

  cat "$inputfile" \
    | jq -r '(map(keys) | add | unique) as $cols | map(. as $row | $cols | map($row[.])) as $rows | $cols, $rows[] | @csv' \
    > "$outputfile"
}


alias preview="watch -n 5 --color prep review"

# foncia
export RABBITMQ__IS_ACTIVATED=true


sshreviewapp() {
  ssh -o StrictHostKeyChecking=no -o "UserKnownHostsFile /dev/null" -i ~/.ssh/id_rsa -L 28030:127.0.0.1:27017 -J vincent.cordobes@bastion.dev1.fonciamillenium.net -t vincent.cordobes@$1 "cd /tmp/localstack ; bash"
}

fwtoday() {
  watson report --day --project foncia --current
}

fwyesterday() {
  yesterday=$(date -v-1d +%Y-%m-%d)
  watson report --from "$yesterday" --to "$yesterday" --project foncia --current
}


wyesterday() {
  project=$1
  from=$2
  to=$3
  yesterday=$(date -v-1d +%Y-%m-%d)

  watson add "$project" \
    --from "$yesterday $from" \
    --to "$yesterday $to"
}

reloadAudio() {
  sudo rmmod snd_sof_pci_intel_tgl
  sudo modprobe snd_sof_pci_intel_tgl
}



moop() {
  mpv "$@" --start="${start:=0}" --ab-loop-a="${start:=0}" --ab-loop-b="${end:=0}" --speed="${speed:=1}"
}
